# coding:utf-8
# *******************************************************************
# * Copyright 2021-2080 evilbinary
# * 作者: evilbinary on 01/01/20
# * 邮箱: rootdebug@163.com
# ********************************************************************
import os

Import('cliEnv')

env=cliEnv

cflags = '  '
libs = [
    'gaga',

]+env['LIBC']

include = [
    '#/eggs/libgaga',
    'include',
    '.',
    'src',
    'hw',
    'hw/bsp'
]

libpath = [
    '#/eggs/libgaga/',
]

source = []

source += [
    # common
    'src/tusb.c',
    'src/common/tusb_fifo.c',
    # device
    'src/device/usbd.c',
    'src/device/usbd_control.c',
    'src/class/audio/audio_device.c',
    'src/class/cdc/cdc_device.c',
    'src/class/dfu/dfu_device.c',
    'src/class/dfu/dfu_rt_device.c',
    'src/class/hid/hid_device.c',
    'src/class/midi/midi_device.c',
    'src/class/msc/msc_device.c',
    'src/class/net/ecm_rndis_device.c',
    'src/class/net/ncm_device.c',
    'src/class/usbtmc/usbtmc_device.c',
    'src/class/vendor/vendor_device.c',
    'src/class/video/video_device.c',
    # host
    'src/host/usbh.c',
    'src/host/hub.c',
    'src/class/cdc/cdc_host.c',
    'src/class/hid/hid_host.c',
    'src/class/msc/msc_host.c',
    'src/class/vendor/vendor_host.c',
    # typec
    'src/typec/usbc.c',
]

include+=[
    'examples/dual/host_hid_to_device_cdc/src/'
]

build_tinyusb=False

if env['PLATFORM']=='raspi2':

    include+=[
        'hw/bsp/broadcom_32bit/boards',
        'hw/bsp/broadcom_32bit',
        'hw/bsp/broadcom'
    ]

    source += [
        'examples/dual/host_hid_to_device_cdc/src/main.c',
        'examples/dual/host_hid_to_device_cdc/src/usb_descriptors.c'
    ]

    source += Glob('hw/bsp/broadcom/*.c')
    source += Glob('hw/bsp/broadcom/gen/*.c')

    source += Glob('hw/bsp/broadcom_32bit/*.c')
    source += Glob('src/portable/raspberrypi/rp2/*.c')

    cflags +=' -std=c99 -DCFG_TUSB_MCU=OPT_MCU_BCM2835 -DBCM_VERSION=2835 -D__ARM_ARCH -D__ARM_ARCH=6 -DCFG_TUD_LOG_LEVEL=0 '
    build_tinyusb=True
else:
    print('todo support')
    pass

if build_tinyusb:
    env.Program('tinyusb', source,
                LIBS=libs+env.get('LIBS'),
                LIBPATH=libpath + env['LIBPATH'],
                CPPPATH=include + env['CPPPATH'],
                CFLAGS=cflags+' $CFLAGS $LIBCFLAGS ',
                CXXFLAGS=cflags+' $CXXFLAGS $LIBCFLAGS '
                )
